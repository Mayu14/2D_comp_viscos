物体側の境界はとりあえず無視する(物体の周囲には必ずL格子が存在し，G格子と直接干渉することはないため)
外部境界側に関して考える

カットセルを行うタイミング
格子移動の前にマージしたセルを分解する
格子移動を行う→新たな幾何関係が出現する．
☆新たな幾何関係に対してカットセルを実行する(このカットセルの状態は次の移動まで維持される)→内挿処理の前に格子の情報を確定させる
内挿を行う

複数の格子によってカットされる領域は？
なんとかなる可能性



:AはArray=配列に格納，:LはList=リストに格納を示す


1.界面の接触判定

	全格子の境界界面に関するループ
		
		両端の点座標から所属Gセルを特定
			if(一端の所属Gセル == 他端の所属Gセル){
				Ture.両端が所属するセル番号が同一であった場合，界面はそのセル中に完全に入っている
				False.両端が所属するセル番号が異なる場合，界面はその2セルを頂点として構成される長方形領域に跨る．

		aの場合，ループ指標界面が接触している界面が存在しないため
				界面が保有する点の数=0 :A
				nullify(1つ前に登録された点へのポインタ):L
			とする
			同時にGセルに対し
				界面両端の点の座標 :L
				1つ前にそのGセルに登録された点へのポインタ :L
				所属させた点の総数+1 :A
				初回参照時のみ未解決フラグを立てる:A
			を登録する
			
		bの場合
			n×mの長方形領域に所属するnm個のセル中に含まれる2nm-m-n個の界面すべてについて，接触判定を行う．
			if(界面同士が接触){
				以下を接触判定している側の界面に紐付けられた
				変数に登録
					界面が保有する点の数+1 :A
				単連結リストに登録
					交差座標 :L
					点番号の若い端点からの距離:L
					1つ前に登録された点へのポインタ:L
					
				と同時に，接触された界面の両側Gセルに対し以下を登録
					点の座標:L
					1つ前に登録された点へのポインタ:L
					所属させた点の総数+1:A
					"死ぬ"元の格子点:A
					初回参照時のみ未解決フラグを立てる:A
				}
				

2.界面側のデータ整理(まだ界面に関するループの中)
1.の処理が終わった時点で
	ある界面が保有する切断点の
		総数:A
		各交差座標:L
		若い端点からの距離:L
	の情報ができあがっている
	
	ここで，界面に所属する点の総数を用いて作業配列を確保
		端点からの距離を格納:A
		距離基準で並び換えを実行:A
		隣接する点を組にして線分とみなす???
		端点からの距離を用いて切り取られた割合を計算:A
		座標値から中点座標を計算，線分の所属Gセルを特定

	Gセルについて以下を登録 !→この並べ替え処理は登録と同時に行われなければならない(本当に？)
		ループ指標の界面の界面・格子番号(ループ情報より):L
		切り取った割合:L
			※最終的にはこのデータを元に時間積分を実行する
		所属してる界面の数+1:A
	
ループ終了	

3.未解決フラグが立っているGセルについてのループ
	Gセルに内在している点の総数を用いて作業配列を確保(ここには重複が含まれる(辺の端部の点が共有されるため))
	保有している点の座標をすべて作業配列に入れる
	座標値を元に点の並び替えを行う
	面積を計算，保存する
	最小面積と比較して，それ以下の面積であれば界面が最長の隣接セルから参照できるように登録する．
	登録された側のセルに未解決フラグを立てる
	自セルに解決フラグを立てる
	
	


		
		
		
		




